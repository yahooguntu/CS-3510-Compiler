<Program>
	<FunctionDeclaration>
		<Name>fact</Name>
		<ReturnType>INT</ReturnType>
		<Params>
			<VariableDeclaration>
				<Name>x</Name>
				<Type>INT</Type>
			</VariableDeclaration>
		</Params>
		<CompoundStatement>
			<Declarations>
			</Declarations>
			<Statments>
				<SelectionStatement>
					<Expression>
						<BinaryExpression>
							<Operand>GREATER_THAN</Operand>
							<LeftSide>
								<VariableExpression>
									<Identifier>x</Identifier>
								</VariableExpression>
							</LeftSide>
							<RightSide>
								<NumberExpression>1</NumberExpression>
							</RightSide>
						</BinaryExpression>
					</Expression>
					<Then>
						<ReturnStatement>
							<Expression>
								<BinaryExpression>
									<Operand>MULTIPLY</Operand>
									<LeftSide>
										<VariableExpression>
											<Identifier>x</Identifier>
										</VariableExpression>
									</LeftSide>
									<RightSide>
										<CallExpression>
											<FunctionName>fact</FunctionName>
											<Arguments>
												<BinaryExpression>
													<Operand>MINUS</Operand>
													<LeftSide>
														<VariableExpression>
															<Identifier>x</Identifier>
														</VariableExpression>
													</LeftSide>
													<RightSide>
														<NumberExpression>1</NumberExpression>
													</RightSide>
												</BinaryExpression>
											</Arguments>
										</CallExpression>
									</RightSide>
								</BinaryExpression>
							</Expression>
						</ReturnStatement>
					</Then>
					<Else>
						<ReturnStatement>
							<Expression>
								<NumberExpression>1</NumberExpression>
							</Expression>
						</ReturnStatement>
					</Else>
				</SelectionStatement>
			</Statments>
		</CompoundStatement>
	</FunctionDeclaration>
	<FunctionDeclaration>
		<Name>main</Name>
		<ReturnType>VOID</ReturnType>
		<Params>
		</Params>
		<CompoundStatement>
			<Declarations>
				<VariableDeclaration>
					<Name>x</Name>
					<Type>INT</Type>
				</VariableDeclaration>
			</Declarations>
			<Statments>
				<ExpressionStatement>
					<AssignExpression>
						<Variable>
							<VariableExpression>
								<Identifier>x</Identifier>
							</VariableExpression>
						</Variable>
						<Value>
							<CallExpression>
								<FunctionName>read</FunctionName>
								<Arguments>
								</Arguments>
							</CallExpression>
						</Value>
					</AssignExpression>
				</ExpressionStatement>
				<SelectionStatement>
					<Expression>
						<BinaryExpression>
							<Operand>GREATER_THAN</Operand>
							<LeftSide>
								<VariableExpression>
									<Identifier>x</Identifier>
								</VariableExpression>
							</LeftSide>
							<RightSide>
								<NumberExpression>0</NumberExpression>
							</RightSide>
						</BinaryExpression>
					</Expression>
					<Then>
						<ExpressionStatement>
							<CallExpression>
								<FunctionName>write</FunctionName>
								<Arguments>
									<CallExpression>
										<FunctionName>fact</FunctionName>
										<Arguments>
											<VariableExpression>
												<Identifier>x</Identifier>
											</VariableExpression>
										</Arguments>
									</CallExpression>
								</Arguments>
							</CallExpression>
						</ExpressionStatement>
					</Then>
				</SelectionStatement>
			</Statments>
		</CompoundStatement>
	</FunctionDeclaration>
</Program>
